@using NNPEFWEB.ViewModels.Roles
@model RolesViewModel

@{ ViewData["Title"] = "Roles";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<!-- Display roles -->
<div class="page-wrapper">
    <!-- ============================================================== -->
    <!-- Container fluid  -->
    <!-- ============================================================== -->
    <div class="container-fluid">
        <div class="section-heading">
            <h1 class="page-title">Roles</h1>
        </div>
        <div class="card">

            <div class="card-body">
                <div class="row">
                    <div class="col-3 offset-9">
                        <button class='btn btn-success btn-block' id="add-edit" data-toggle="modal" data-target="#roleModal">
                            <i class="fa fa-plus"></i> &nbsp; Add Role
                        </button>
                    </div>
                    <hr class="btn-block">
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <table id="data-table-role" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <td>Name</td>
                                    <td>Status</td>
                                    <td></td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var role in Model.Roles)
                                {
                    <tr class="e-row" data-user-id="@role.Id">
                        <td class="e-details" data-role-id="@role.Id">
                            @role.Name
                        </td>
                        @*@if (role.IsActive)
                            {*@
                        <td><span class="badge badge-success"><i class="fa fa-check"></i>&nbsp;Active</span></td>
                        @*}
                            else
                            {*@
                        <td><span class="badge badge-danger"><i class="fa fa-times"></i>&nbsp;Inactive</span></td>
                        @*}*@
                        @*@if (role.IsActive)
                            {*@
                        <td><a type="button" class="btn btn-danger" href="role/ToggleStatus/@role.Id">Deactivate</a></td>
                        @*}
                            else
                            {*@
                        <td><a type="button" class="btn btn-primary" href="role/ToggleStatus/@role.Id">Activate</a></td>
                        @*}*@
                    </tr>
}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Display roles -->
        <!-- Create role Modal-->
        <div class="modal fade" id="roleModal" tabindex="-1" role="dialog" aria-labelledby="vLabel" aria-hidden="true"
             data-backdrop="static">
            <form action="/role/create" id="post-form" class="form" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="roleModalLabel">Add Roles</h5>
                            <button type="button" class="close dismiss-modal" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">

                            <input type="hidden" value="0" id="id" name="id" />
                            <div class=" form-group">
                                <label for="Name" class="control-label">
                                    Name
                                </label>
                                <input type="text" id="name" name="name" required class="form-control">
                            </div>

                            <div class="form-group">
                                <label for="Description" class="control-label">
                                    Description
                                </label>
                                <textarea name="Description" id="description" class="form-control" required></textarea>
                            </div>
                            <label for="menus" class="">
                                Menus
                            </label>
                            <div class="form-group">
                                <select style="width:100%" id="menus" name="menus" multiple class="required form-control row">
                                    <option value="0">Select Menus</option>
                                    @foreach (var menu in Model.Menus)
                                    {
                        <option value="@menu.Id">@menu.Name</option>
}
                                </select>
                            </div>

                            <div>
                                <label for="active" class="control-label">
                                    Active
                                </label>
                                <label class="switch switch-default switch-pill switch-secondary mr-2">
                                    <input name="Active" type="checkbox" class="switch-input" value="true" checked="true">
                                    <span class="switch-label"></span>
                                    <span class="switch-handle"></span>
                                </label>
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary dismiss-modal" data-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-success" id="addRole">Save</button>
                            </div>

                        </div>
                    </div>
                </div>
            </form>
        </div>
        <!-- End Create role Modal-->

    </div>
</div>
<script> 
    $(function () {
            $("#smartwizard-default-primary").smartWizard({
                theme: "default",
                showStepURLhash: false
            });
            $("#smartwizard-default-success").smartWizard({
                theme: "default",
                showStepURLhash: false
            });
            $("#smartwizard-default-danger").smartWizard({
                theme: "default",
                showStepURLhash: false
            });
            $("#smartwizard-default-warning").smartWizard({
                theme: "default",
                showStepURLhash: false
            });
            $("#smartwizard-arrows-primary").smartWizard({
                theme: "arrows",
                showStepURLhash: false
            });
            $("#smartwizard-arrows-success").smartWizard({
                theme: "arrows",
                showStepURLhash: false
            });
            $("#smartwizard-arrows-danger").smartWizard({
                theme: "arrows",
                showStepURLhash: false
            });
            $("#smartwizard-arrows-warning").smartWizard({
                theme: "arrows",
                showStepURLhash: false
            });
            // Validation
            var $validationForm = $("#smartwizard-validation");
            $validationForm.validate({
                errorPlacement: function errorPlacement(error, element) {
                    $(element).parents(".form-group").append(
                        error.addClass("invalid-feedback small d-block")
                    )
                },
                highlight: function (element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid");
                },
                rules: {
                    "wizard-confirm": {
                        equalTo: "input[name=\"wizard-password\"]"
                    }
                }
            });
            $validationForm
                .smartWizard({
                    autoAdjustHeight: false,
                    backButtonSupport: false,
                    useURLhash: false,
                    showStepURLhash: false,
                    toolbarSettings: {
                        toolbarExtraButtons: [$("<button class=\"btn btn-submit btn-primary\" type=\"submit\">Finish</button>")]
                    }
                })
                .on("leaveStep", function (e, anchorObject, stepNumber, stepDirection) {
                    if (stepDirection === "forward") {
                        return $validationForm.valid();
                    }
                    return true;
                });
            $validationForm.find(".btn-submit").on("click", function () {
                if (!$validationForm.valid()) {
                    return;
                }
                //alert("Great! The form is valid and ready to submit.");
                //return false;
            });
        });</script>


<script>$(document).ready(function () {
            $('#data-table-role').DataTable({
                "language ": {
                    "emptyTable ": "No Role. Add new Role. "
                }
            });

            $("#menus").select2();


            $('#data-table-role tbody').on('click', '.e-details', function () {
                alert('i am here for role');
                $("#roleModalLabel").text("Edit Role");
                roleId = $(this).data('role-id')


                var url = window.location.origin + '/role/' + roleId;
                $.get(url, function (response) {
                    if (response.success) {
                        $("#id").val(response.data.role.id)
                        $("#name").val(response.data.role.name);
                        $("#description").val(response.data.role.description)
                        $("#post-form").attr('action', "/role/update")

                        if (response.data.menus) {
                            $("#menus").val(response.data.menus).trigger('change')
                        }

                        $("#add-edit").trigger("click")
                    }

                });
            });

            $(".dismiss-modal").click(function () {
                $("#roleModalLabel").text("Add User")
                $("#post-form :input").each(function () {
                    $(this).val("")
                });
                $("#post-form").attr('action', "/role/create")
                $("#menus").val("").trigger('change')

            });

        });</script>


<script>$(document).ready(function () {
            $('#data-table-user').DataTable({
                "language ": {
                    "emptyTable ": "No User. Add new User. "
                }
            });


            $("#roles").select2();
            $("#device").select2();


            $('#data-table-user tbody').on('click', '.e-details', function () {
                alert('i am here');
                $("#userModalLabel").text("Edit User");
                userId = $(this).data('user-id')


                var url = window.location.origin + '/user/' + userId;
                $.get(url, function (response) {
                    console.log(response)
                    if (response.success) {
                        $("#id").val(response.data.user.id)
                        $("#email").val(response.data.user.email);
                        $("#firstname").val(response.data.user.firstName)
                        $("#lastname").val(response.data.user.lastName)
                        $("#username").val(response.data.user.userName)
                        $("#password").val("F^&^&Y(HBJKBJ")
                        $("#confirmpassword").val("F^&^&Y(HBJKBJ")
                        $("#password").attr("readonly", "readonly")
                        $("#confirmpassword").attr("readonly", "readonly")
                        $("#post-form").attr('action', "/user/update")

                        if (response.data.roles) {
                            $("#roles").val(response.data.roles).trigger('change')
                        }


                        if (response.data.devices) {
                            response.data.devices.forEach(function (element) {
                                $("#device").val(element).trigger('change')
                            });
                        }



                        if (response.data.user.isActive) {
                            $("#isactive").attr("checked", response.data.user.isActive.toString())
                        } else {
                            $("#isactive").removeAttr("checked")
                        }
                        $("#add-edit").trigger("click")
                    }

                });
            });



            $(".dismiss-modal").click(function () {
                $("#userModalLabel").text("Add User")
                $("#post-form :input").each(function () {
                    if ($(this).attr('name') == "id") {
                        $(this).val(0)
                    }
                    else {
                        $(this).val("")
                    }

                });
                $("#post-form").attr('action', "/user/create")
                $("#device").val("").trigger('change')
                $("#roles").val("").trigger('change')
                $("#password").removeAttr("readonly")
                $("#confirmpassword").removeAttr("readonly")

            });
        });</script>
